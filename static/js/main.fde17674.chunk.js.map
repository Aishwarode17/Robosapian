{"version":3,"sources":["components/Navbar.js","images/logo.png","components/Logo.js","components/Imagelink.js","components/Rank.js","components/Predictions.js","components/Loading.js","components/Errorboundary.js","components/Partistl.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","style","display","justifyContent","className","href","Logo","glareEnable","glareMaxOpacity","glareColor","glarePosition","src","logophoto","alt","Imagelink","typechange","press","height","overflowY","type","onChange","placeholder","onClick","Rank","fontWeight","Predictions","pred","textAlign","Loading","props","make","children","Errorboundary","haserror","Partistl","position","top","bottom","left","right","zIndex","params","require","cocoSsd","App","typeChange","event","setState","tmp","target","value","url","state","load","a","img","document","getElementById","model","classify","predictions","therr","this","crossOrigin","onError","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fde17674.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n            <p className=\"f3 pa4 link underline dim black pointer\"><a className=\"black f3\" href=\"https://aishwarode17.github.io/Robosapian\">Reload</a></p>            \r\n        </nav>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.77efc7a9.png\";","import React from 'react'\r\nimport Tilt from 'react-parallax-tilt';\r\nimport \"./Logo.css\"\r\nimport logophoto from \"../images/logo.png\"\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n             <Tilt  className=\"logo br2 shadow-5 pointer\"  glareEnable={true} glareMaxOpacity={0.9} glareColor=\"lightblue\" glarePosition=\"all\">\r\n                <div>\r\n                    <img src={logophoto} alt=\"logo\"/>\r\n                </div>\r\n             </Tilt>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Imagelink.css\"\r\n\r\nexport default function Imagelink({typechange,press}) {\r\n    return (\r\n        <div className=\"\">\r\n             <p className=\"f4 line ph2 ba pv1\" style={{height:\"180px\" , overflowY:\"scroll\"}}>\r\n                {\"This is an object detection app.\"}\r\n                {\"Please enter the direct image address and not the image link below. Also , some images can't be loaded on browsers directly, because of CROSS ORIGIN RESOURCE SHARING policy. So, in rare cases if this happens in your browser, Reload the page. Also if you're viewing this on a mobile device, and have an image you want to use in here, then download that image on your mobile if you not already have it. Afterwards, upload that image on  IMGBB.COM . Than , select HTML FULL INKED option in the embedded codes (you will see it there). Now , after selecting it, you will see an <a> tag (html anchor tag). Inside this <a> tag you will find an <img> tag. At last, copy the url of the image which is the value of the SRC attribute. You now have the direct address of the image which you can paste below and see what this detects. Also do not enter url inside double quotes (\\\"\\\"). Only enter clean direct image address/url. Also if you press detect without any url , then also an error will arise . You need to reload the page at that case also. \"}\r\n            </p>\r\n            <div className=\"center mt2\">\r\n                <div className=\"center pa4 br3 shadow-5 smscr \">\r\n                <input type=\"text\" onChange={typechange} className=\"f4 pa2 w-70 center\" placeholder=\"enter url\" />\r\n                <button onClick={press} className=\"center w-30 btnd grow f4 link ph3 pv2 white line bg-light-purple\">detect</button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rank() {\r\n    return (\r\n        <div className=\"center mb4 mt3 line\">\r\n            <div className=\"white ins\">\r\n                <p style={{fontWeight:\"bold\"}}>Robo-Sapien</p>\r\n                <p>Please read and follow instructions</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport default function Predictions({pred}) {\r\n    return (\r\n        <div className=\"center mt4 mb5 f3 \" style={{textAlign:'center'}}>\r\n            <li>\r\n                <ul>{`First Prediction: ${pred[0][\"className\"]}`}</ul>\r\n                <ul>{`Second Prediction: ${pred[1][\"className\"]}`}</ul>\r\n                <ul><p>{\"Third Prediction: \"}<span>{pred[2][\"className\"]}</span></p></ul>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Loading(props) {\r\n\r\n    if(props.make === false){\r\n        return (\r\n            <div>\r\n                <p className=\"f3 center mt4 mb6\" style={{textAlign:'center'}}>Your predictions will be shown here</p>\r\n            </div>\r\n        )\r\n    }\r\n    else if(props.make === \"loading\"){\r\n        return(\r\n            <div>\r\n                <p className=\"f3 center mt4 mb6\" style={{textAlign:'center'}}>Please wait while we make predictions. It may take a few seconds (depends on your network speed). Do not reload or press detect button again.</p>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Errorboundary(props) {\r\n    \r\n    if(props.haserror){\r\n    return(\r\n        <div>\r\n        <p className=\"f3 ba mt4 center pa2\" style={{textAlign:'center', overflowY:\"scroll\", height:\"300px\"}}>\r\n            This image can't be loaded duef to CORS error, I Aishwar malviya am really sorry about this. In further update I will resolve this error by adding a proxy server, which is under construction. Therefore, for now use a different image. Also Make sure to enter the image address (direct image address). To do so in desktop, go to image and copy image address. And in mobile phone download the image in your mobile, then upload it on imgbb.com , then select \"HTML full inked \" option from embedded codes. After that an html {\"<a>\"} tag (anchor tag) will be shown to you. From that tag copy the url inside the \"src\" attribute of the inner img tag. Than paste that url above. Make sure your url isn't inside any double quote (\"\"). If this doesn't work than try reloading and using a different image with direct address. \r\n        </p>\r\n        </div>\r\n      )\r\n    }\r\n    else{return(\r\n        <div>\r\n             {props.children}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n","import Particles from 'react-particles-js';\r\n\r\nimport React from 'react'\r\n\r\nexport default function Partistl() {\r\n    return (\r\n        <div>\r\n            <Particles \r\n            style={{position:\"fixed\",top:\"0px\",bottom:'0px',left:'0px',right:'0px',zIndex:'-3'}}\r\n              params={{\r\n                \"particles\": {\r\n                    \"number\": {\r\n                        \"value\": 40\r\n                    },\r\n                    \"size\": {\r\n                        \"value\": 2\r\n                    }\r\n                }\r\n              }} />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { Component } from 'react'\nimport Navbar from './components/Navbar';\nimport Logo from './components/Logo';\nimport Imagelink from './components/Imagelink';\nimport Rank from './components/Rank';\nimport Predictions from './components/Predictions';\nimport Loading from './components/Loading';\nimport Errorboundary from './components/Errorboundary';\nimport Partistl from './components/Partistl';\n\nrequire('@tensorflow/tfjs-backend-cpu');\nrequire('@tensorflow/tfjs-backend-webgl');\nconst cocoSsd = require('@tensorflow-models/mobilenet');\n\n\nexport default class App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      url:\"https://media.istockphoto.com/photos/robot-with-education-hud-picture-id966248982?k=20&m=966248982&s=612x612&w=0&h=gq35V9G0kfjKu0ttr90c8p0VraNtqPDkTvqWQ8oXzCk=\",\n      tmp:\"\",\n      pred:[{className:\"first\"},{className:\"second\"},{className:\"third\"}],\n      load: false,\n      haserror:false\n    }\n  }\n\n  typeChange = (event)=>{\n    this.setState({tmp:event.target.value});\n  }\n\n  press =()=>{\n    this.setState({url:this.state.tmp,load:\"loading\"});\n                  if(this.state.haserror === false){\n                        (async () => {\n                          const img = document.getElementById('dt');\n                          const model = await cocoSsd.load();\n                          this.setState({load:true})\n                          const predictions = await model.classify(img);                        \n                          this.setState({pred: predictions});\n                        })();\n                      }      \n  }\n\n  therr = ()=>{\n    // throw console.error(\"this can't be loaded\");;\n    this.setState({haserror:true});\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Partistl/>\n        <Navbar></Navbar>\n        <Logo></Logo>\n        <Rank></Rank>\n        <Imagelink typechange={this.typeChange} press={this.press}></Imagelink>\n        <Errorboundary haserror={this.state.haserror}>\n        <img crossOrigin=\"anonymous\" onError={this.therr} id=\"dt\" src={this.state.url}  alt=\"dtection\" className=\"center imdt mt4\"  />\n        <Loading make={this.state.load}>\n        <Predictions pred={this.state.pred}></Predictions>\n        </Loading>\n        </Errorboundary>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}